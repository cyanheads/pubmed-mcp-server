startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      MCP_TRANSPORT_TYPE:
        type: string
        enum: ["stdio", "http"]
        default: "stdio"
        description: "MCP communication transport ('stdio' or 'http')."
      MCP_HTTP_PORT:
        type: integer
        default: 3010
        description: "HTTP server port (if MCP_TRANSPORT_TYPE is 'http')."
      MCP_LOG_LEVEL:
        type: string
        default: "info"
        description: "Minimum logging level."
      NCBI_API_KEY:
        type: string
        description: "NCBI API Key. Optional, but highly recommended for higher rate limits."
      NCBI_TOOL_IDENTIFIER:
        type: string
        default: "@cyanheads/pubmed-mcp-server"
        description: "Tool identifier sent to NCBI. Defaults to @cyanheads/pubmed-mcp-server/MCP_SERVER_VERSION."
      NCBI_ADMIN_EMAIL:
        type: string
        description: "Administrator's email for NCBI contact. Optional, but recommended if using an API key."
  commandFunction: |
    (config) => ({
      "command": "node",
      "args": ["dist/index.js"],
      "env": {
        "MCP_TRANSPORT_TYPE": config.MCP_TRANSPORT_TYPE,
        "MCP_HTTP_PORT": config.MCP_HTTP_PORT,
        "MCP_LOG_LEVEL": config.MCP_LOG_LEVEL,
        "NCBI_API_KEY": config.NCBI_API_KEY,
        "NCBI_TOOL_IDENTIFIER": config.NCBI_TOOL_IDENTIFIER,
        "NCBI_ADMIN_EMAIL": config.NCBI_ADMIN_EMAIL
      }
    })
